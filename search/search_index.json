{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tinfoil Documentation","title":"Home"},{"location":"#tinfoil-documentation","text":"","title":"Tinfoil Documentation"},{"location":"custom_index/","text":"A custom Tinfoil index is a special JSON file that contains a list of a files, directories, and other special parameters. To load this index, you can either serve it over a http web server, or you can name it *.tfl and place it in any directory that Tinfoil scans. Basic Format { \"files\": [\"https://url1\", \"sdmc:/url2\", \"http://url3\"], \"directories\": [\"https://url1\", \"sdmc:/url2\", \"http://url3\"], \"success\": \"motd text here\" } Detailed Format { \"files\": [ { \"url\": \"https://url1\", \"size\": 1000 }, { \"url\": \"https://url2\", \"size\": 3000 }, { \"url\": \"https://url3\", \"size\": 5000 } ], \"directories\": [\"https://url1\", \"sdmc:/url2\", \"http://url3\"], \"success\": \"motd text here\" } Message of the Day You can specify a message to be presented to the user by setting either the \"success\" or \"error\" json key. { \"success\": \"hello world\" } Referrer If serving the index over http, you may specify a referrer to prevent others from hotlinking using the \"referrer\" json key. { \"referrer\": \"http://mydomain.com/index.tfl\" } Google API Key You may specify a google API key to be used with all gdrive:/ requests using the \"googleApiKey\" json key. { \"googleApiKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" } Custom HTTP Headers You may specify custom HTTP headers to be sent with Tinfoil requests using the \"headers\" json key. { \"headers\": [\"My-Custom_header: hello\", \"My-Custom_header2: world\"] } Minimum Tinfoil Version Required You can specify a minimum Tinfoil version to load the index using the \"version\" json key. { \"version\": 7.00 } Client Certificate You may specify a client certificate using \"clientCertPub\" and \"clientCertKey\" json keys. { \"clientCertPub\": \"-----BEGIN PUBLIC KEY----- ....\", \"clientCertKey\": \"-----BEGIN PRIVATE KEY----- ....\" } Theme Blacklist You may specify a list of themes to blacklist based on their hash using the \"themeBlackList\" json key: { \"themeBlackList\": [\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"] } Theme Whitelist You may specify a list of themes to whitelist based on their hash using the \"themeWhiteList\" json key: { \"themeWhiteList\": [\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"] }","title":"Custom Index"},{"location":"custom_index/#basic-format","text":"{ \"files\": [\"https://url1\", \"sdmc:/url2\", \"http://url3\"], \"directories\": [\"https://url1\", \"sdmc:/url2\", \"http://url3\"], \"success\": \"motd text here\" }","title":"Basic Format"},{"location":"custom_index/#detailed-format","text":"{ \"files\": [ { \"url\": \"https://url1\", \"size\": 1000 }, { \"url\": \"https://url2\", \"size\": 3000 }, { \"url\": \"https://url3\", \"size\": 5000 } ], \"directories\": [\"https://url1\", \"sdmc:/url2\", \"http://url3\"], \"success\": \"motd text here\" }","title":"Detailed Format"},{"location":"custom_index/#message-of-the-day","text":"You can specify a message to be presented to the user by setting either the \"success\" or \"error\" json key. { \"success\": \"hello world\" }","title":"Message of the Day"},{"location":"custom_index/#referrer","text":"If serving the index over http, you may specify a referrer to prevent others from hotlinking using the \"referrer\" json key. { \"referrer\": \"http://mydomain.com/index.tfl\" }","title":"Referrer"},{"location":"custom_index/#google-api-key","text":"You may specify a google API key to be used with all gdrive:/ requests using the \"googleApiKey\" json key. { \"googleApiKey\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" }","title":"Google API Key"},{"location":"custom_index/#custom-http-headers","text":"You may specify custom HTTP headers to be sent with Tinfoil requests using the \"headers\" json key. { \"headers\": [\"My-Custom_header: hello\", \"My-Custom_header2: world\"] }","title":"Custom HTTP Headers"},{"location":"custom_index/#minimum-tinfoil-version-required","text":"You can specify a minimum Tinfoil version to load the index using the \"version\" json key. { \"version\": 7.00 }","title":"Minimum Tinfoil Version Required"},{"location":"custom_index/#client-certificate","text":"You may specify a client certificate using \"clientCertPub\" and \"clientCertKey\" json keys. { \"clientCertPub\": \"-----BEGIN PUBLIC KEY----- ....\", \"clientCertKey\": \"-----BEGIN PRIVATE KEY----- ....\" }","title":"Client Certificate"},{"location":"custom_index/#theme-blacklist","text":"You may specify a list of themes to blacklist based on their hash using the \"themeBlackList\" json key: { \"themeBlackList\": [\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"] }","title":"Theme Blacklist"},{"location":"custom_index/#theme-whitelist","text":"You may specify a list of themes to whitelist based on their hash using the \"themeWhiteList\" json key: { \"themeWhiteList\": [\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\"] }","title":"Theme Whitelist"},{"location":"drm/","text":"DRM Tinfoil supports encrypting custom index jsons, to prevent unauthorized redistribution of direct links to your private content. How It Works It works by generating a random AES-128-ECB key, encrypting your content with that key, and then wrapping the key with asymetrical RSA OAEP 2048-bit and sending it to Tinfoil. How to Use You can use this simple python script (with the supplied public key) to encrypt your index or html files! Run encrypt.py input.json output.tfl to encrypt via command line. encrypt.py public.key","title":"DRM"},{"location":"drm/#drm","text":"Tinfoil supports encrypting custom index jsons, to prevent unauthorized redistribution of direct links to your private content.","title":"DRM"},{"location":"drm/#how-it-works","text":"It works by generating a random AES-128-ECB key, encrypting your content with that key, and then wrapping the key with asymetrical RSA OAEP 2048-bit and sending it to Tinfoil.","title":"How It Works"},{"location":"drm/#how-to-use","text":"You can use this simple python script (with the supplied public key) to encrypt your index or html files! Run encrypt.py input.json output.tfl to encrypt via command line. encrypt.py public.key","title":"How to Use"},{"location":"mtp/","text":"MTP Server MTP is a driverless way to transfer files from your Nintendo Switch to your PC. It can transfer any file under 4GB. You simply connect your USB cable from your Switch to your PC and start Tinfoil. Installed Lists all of your currently installed applications as a virtual NSP file. CVopying any of these files to your PC allows you to dump any installed application (under 4GB) to your PC. Copying a NSP or NSZ file to this directory immediately installs that file. Firmware Lists a single NSP file that represents your currently installed firmware. Copying this file allows you to backup your firmware. Copying a firmware NSP file to this directory immediately installs that firmware. Index Lists all remote NSP files indexed by Tinfoil. This allows you to copy remote files to your PC. This however is limited by strict timeout values, therefore it will only work if your remote file has fast response times. System Files on your Nintendo Switch's system partition. User Files on your Nintendo Switch's user partition. sdcard Files on your Nintendo Switch's microSD card.","title":"MTP"},{"location":"mtp/#mtp-server","text":"MTP is a driverless way to transfer files from your Nintendo Switch to your PC. It can transfer any file under 4GB. You simply connect your USB cable from your Switch to your PC and start Tinfoil.","title":"MTP Server"},{"location":"mtp/#installed","text":"Lists all of your currently installed applications as a virtual NSP file. CVopying any of these files to your PC allows you to dump any installed application (under 4GB) to your PC. Copying a NSP or NSZ file to this directory immediately installs that file.","title":"Installed"},{"location":"mtp/#firmware","text":"Lists a single NSP file that represents your currently installed firmware. Copying this file allows you to backup your firmware. Copying a firmware NSP file to this directory immediately installs that firmware.","title":"Firmware"},{"location":"mtp/#index","text":"Lists all remote NSP files indexed by Tinfoil. This allows you to copy remote files to your PC. This however is limited by strict timeout values, therefore it will only work if your remote file has fast response times.","title":"Index"},{"location":"mtp/#system","text":"Files on your Nintendo Switch's system partition.","title":"System"},{"location":"mtp/#user","text":"Files on your Nintendo Switch's user partition.","title":"User"},{"location":"mtp/#sdcard","text":"Files on your Nintendo Switch's microSD card.","title":"sdcard"},{"location":"network/","text":"NUT NUT is the simplest way to install over the network. It is a piece of software that will serve your NSP's from your PC to your switch over the network, or through USB. All NSP's must have \"[titleid]\" in the file name to be indexed by NUT to show up in \"New Games\", \"New DLC\", and \"New Updates\". You can download NUT at https://github.com/blawar/nut/. HTTP / HTTPS Tinfoil downloads the html (or json) and parses out the links. Tinfoil supports relative paths, and absolute if you want to link to a different server, or even another device such as your microSD card. Tinfoil is known to work with Windows IIS, Apache, and Nginx. Though it should work with any HTTP server that supports ranged requests. Headers Sent Tinfoil will send a few custom headers when requesting a directory only (not files): Theme Hash The user's current Tinfoil theme hash is sent via \"Theme: XXXXXXXXXXXXXXX\". User Fingerprint A unique user fingerprint is sent via \"UID: XXXXXXXXXXXXXX\". Tinfoil Version The client's Tinfoil version is sent via \"Version: 7.00\". Basic Directory Serving Just enable directory listing on your web server, and Tinfoil will automatically parse the links. Your web server will automatically generate the html! Authorization Basic Auth Basic HTTP authentication is supported, to prevent unauthorized users from accessing your files. Client Certificate Auth A custom client certificate may be specified with a custom index file. FTP / FTPS Tinfoil is known to work with Windows IIS FTP server, and FileZilla. Though it works with many more servers. Samba / SMB Tinfoil supports SMB / Windows File Shares. Google Drive All google drive links use the gdrive: scheme within Tinfoil, however there are three different modes with different priority levels. URL Format Both files and folders follow the same format. If specifying by the google file id, use gdrive:AAAAAAAAAAAAAAAAA (notice lack of forward slash). If specifying a path (only works with OAuth) use gdrive:/root/folder1/file.zip Auth OAuth Google Drive OAuth has the highest priority and will always be used if setup. OAuth is the only method to access and list private files. You must set up google drive OAuth within NUT, and then connect Tinfoil to NUT via network or USB to transfer the OAuth token(s). API Key Specifying an API key allows you to do authed requests to access private files, however listing files will not work. Public This is the least reliable, however it supports listing and downloading public files. Dropbox Access Token You need an API key to use this. Go to https://www.dropbox.com/developers/apps and create a new app, and then click the \"generate access token\" button to generate an access token to use with Tinfoil. Adding the location You can edit the locations.conf file directly by adding an entry for dropbox://token:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@api.dropbox.com/ where XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX is your access token.","title":"Network Install"},{"location":"network/#nut","text":"NUT is the simplest way to install over the network. It is a piece of software that will serve your NSP's from your PC to your switch over the network, or through USB. All NSP's must have \"[titleid]\" in the file name to be indexed by NUT to show up in \"New Games\", \"New DLC\", and \"New Updates\". You can download NUT at https://github.com/blawar/nut/.","title":"NUT"},{"location":"network/#http-https","text":"Tinfoil downloads the html (or json) and parses out the links. Tinfoil supports relative paths, and absolute if you want to link to a different server, or even another device such as your microSD card. Tinfoil is known to work with Windows IIS, Apache, and Nginx. Though it should work with any HTTP server that supports ranged requests.","title":"HTTP / HTTPS"},{"location":"network/#headers-sent","text":"Tinfoil will send a few custom headers when requesting a directory only (not files):","title":"Headers Sent"},{"location":"network/#theme-hash","text":"The user's current Tinfoil theme hash is sent via \"Theme: XXXXXXXXXXXXXXX\".","title":"Theme Hash"},{"location":"network/#user-fingerprint","text":"A unique user fingerprint is sent via \"UID: XXXXXXXXXXXXXX\".","title":"User Fingerprint"},{"location":"network/#tinfoil-version","text":"The client's Tinfoil version is sent via \"Version: 7.00\".","title":"Tinfoil Version"},{"location":"network/#basic-directory-serving","text":"Just enable directory listing on your web server, and Tinfoil will automatically parse the links. Your web server will automatically generate the html!","title":"Basic Directory Serving"},{"location":"network/#authorization","text":"","title":"Authorization"},{"location":"network/#basic-auth","text":"Basic HTTP authentication is supported, to prevent unauthorized users from accessing your files.","title":"Basic Auth"},{"location":"network/#client-certificate-auth","text":"A custom client certificate may be specified with a custom index file.","title":"Client Certificate Auth"},{"location":"network/#ftp-ftps","text":"Tinfoil is known to work with Windows IIS FTP server, and FileZilla. Though it works with many more servers.","title":"FTP / FTPS"},{"location":"network/#samba-smb","text":"Tinfoil supports SMB / Windows File Shares.","title":"Samba / SMB"},{"location":"network/#google-drive","text":"All google drive links use the gdrive: scheme within Tinfoil, however there are three different modes with different priority levels.","title":"Google Drive"},{"location":"network/#url-format","text":"Both files and folders follow the same format. If specifying by the google file id, use gdrive:AAAAAAAAAAAAAAAAA (notice lack of forward slash). If specifying a path (only works with OAuth) use gdrive:/root/folder1/file.zip","title":"URL Format"},{"location":"network/#auth","text":"","title":"Auth"},{"location":"network/#oauth","text":"Google Drive OAuth has the highest priority and will always be used if setup. OAuth is the only method to access and list private files. You must set up google drive OAuth within NUT, and then connect Tinfoil to NUT via network or USB to transfer the OAuth token(s).","title":"OAuth"},{"location":"network/#api-key","text":"Specifying an API key allows you to do authed requests to access private files, however listing files will not work.","title":"API Key"},{"location":"network/#public","text":"This is the least reliable, however it supports listing and downloading public files.","title":"Public"},{"location":"network/#dropbox","text":"Access Token You need an API key to use this. Go to https://www.dropbox.com/developers/apps and create a new app, and then click the \"generate access token\" button to generate an access token to use with Tinfoil. Adding the location You can edit the locations.conf file directly by adding an entry for dropbox://token:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@api.dropbox.com/ where XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX is your access token.","title":"Dropbox"},{"location":"usb/","text":"Tinfoil Documentation For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"USB Install"},{"location":"usb/#tinfoil-documentation","text":"For full documentation visit mkdocs.org .","title":"Tinfoil Documentation"},{"location":"usb/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"usb/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}